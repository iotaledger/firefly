{
    "views": {
        "onboarding": {
            "appSetup": {
                "welcome": {
                    "title": "Send, Receive & Manage your {network} tokens",
                    "body": "Firefly is the official wallet software for {network}."
                },
                "legal": {
                    "title": "Privacy Policy & Terms of Service",
                    "body": "Please review the Privacy Policy and Terms of Service.",
                    "checkbox": "I've read and I accept the Privacy Policy and Terms of Service"
                },
                "languageAndAppearance": {
                    "title": "Language & appearance",
                    "body": "Choose your language and theme."
                }
            },
            "networkSetup": {
                "chooseProtocol": {
                    "title": "Choose protocol",
                    "body": "Set the protocol for your profile.",
                    "iota": "Default IOTA network",
                    "shimmer": "Experimental IOTA staging network"
                },
                "chooseNetwork": {
                    "title": "Choose network",
                    "body": "Set the network for your profile.",
                    "iota": {
                        "title": "IOTA",
                        "body": "IOTA Mainnet"
                    },
                    "shimmer": {
                        "title": "Shimmer",
                        "body": "Staging network for IOTA"
                    },
                    "testnet": {
                        "title": "Testnet",
                        "body": "Public beta network for Shimmer"
                    },
                    "custom": {
                        "title": "Custom network",
                        "body": "Support for custom networks and/or nodes"
                    }
                },
                "setupCustomNetwork": {
                    "title": "Connect to a custom network or node",
                    "body": "Fill the form with the node information and connect to a custom network or node."
                }
            },
            "profileSetup": {
                "setup": {
                    "title": "Set up {network, select, IOTA {an} Shimmer {a} Testnet {a} other {a}} {network} profile",
                    "body": "Select the appropriate method to set up your {network} profile."
                },
                "setupNew": {
                    "title": "Create a profile",
                    "body": "You can choose a regular software wallet, or if you have a Ledger device, you can set up a hardware wallet.",
                    "softwareAccount": {
                        "title": "Create a software profile",
                        "description": "Provides a Stronghold file and recovery phrase"
                    },
                    "ledgerAccount": {
                        "title": "Create a hardware profile",
                        "description": "Ledger Nano S or Nano X required"
                    }
                },
                "setupRecovered": {
                    "title": "Recover {network} profile",
                    "body": "If you have an existing mnemonic or Stronghold backup file, you can import it here.",
                    "importMnemonic": "Use recovery phrase",
                    "importMnemonicDescription": "Enter your 24-word mnemonic phrase",
                    "importFile": "Use Stronghold backup",
                    "importFileDescription": "Import your Stronghold backup file",
                    "importLedger": "Use Ledger device",
                    "importLedgerDescription": "Restore from your Ledger Nano S or X device"
                },
                "setupClaimed": {
                    "title": "Claim Shimmer staking rewards",
                    "body": "Import your IOTA profile and claim your Shimmer staking rewards."
                },
                "enterName": {
                    "title": "Create your {network} profile",
                    "profileName": "Profile name",
                    "body1": "You can create multiple user profiles to organise your wallets and improve privacy.",
                    "body2": {
                        "first": "For now, let's start with your first profile name.",
                        "nonFirst": "For now, let's start with your profile name."
                    },
                    "addMore": "You can add more profiles later."
                }
            },
            "strongholdSetup": {
                "setupStrongholdPassword": {
                    "title": "Create a password",
                    "body1": "You need a strong password to protect your funds. Use a combination of words, and avoid common phrases, names or dates.",
                    "body2": "It is recommended that you write down your password in your Recovery Kit."
                }
            },
            "storageProtectionSetup": {
                "setupPinProtection": {
                    "title": "Set up PIN code",
                    "body1": "Enter a 6-digit PIN below. You will be asked for your PIN to access your profile.",
                    "body2": "Use numbers only"
                }
            },
            "profileBackup": {
                "backupMnemonic": {
                    "title": "Back up your recovery phrase",
                    "body1": "You will now be shown a recovery phrase. Write it down in your Recovery Kit.",
                    "body2": "Do not share your recovery phrase with anyone. It can be used to access your tokens from anywhere.",
                    "body3": "If you lose your recovery phrase, you may lose your funds."
                },
                "viewMnemonic": {
                    "title": "Recovery phrase",
                    "body1": "In your Recovery Kit, write down the words in the exact order shown.",
                    "body2": "Keep this private and safely stored.",
                    "body3": "It is important to have a written backup. Computers often fail and files can corrupt.",
                    "revealRecoveryPhrase": "Reveal recovery phrase",
                    "hideRecoveryPhrase": "Hide recovery phrase"
                },
                "verifyMnemonic": {
                    "title": "Verify recovery phrase",
                    "body": "Let's check you wrote down the phrase correctly. Please select each word in numbered order. Tip: You can press the number next to the word in your keyboard to select it.",
                    "word": "Word",
                    "verified": "Recovery phrase verified",
                    "verifiedBody": "Remember to keep it private and safely stored."
                },
                "backupStronghold": {
                    "title": "Back up to a Stronghold file",
                    "body1": "Enter your password to create a Stronghold backup of your profile. Your password is used to encrypt the backup file.",
                    "body2": "Reasons why digital backups are important:",
                    "reason1": "Easily recover your wallets without typing in your recovery phrase",
                    "reason2": "Import your wallets on other devices",
                    "reason3": "Recover your full transaction history"
                }
            },
            "profileRecovery": {
                "importMnemonicPhrase": {
                    "title": "Enter your recovery phrase",
                    "body": "A recovery phrase is 24 words long, all lower case, with spaces between. This is used to recover existing Firefly profiles.",
                    "enter": "Enter your secret recovery phrase",
                    "phraseDetected": "24 word recovery phrase detected"
                },
                "importStrongholdBackup": {
                    "title": "Import your Stronghold backup",
                    "body": "Import a Stronghold backup file to restore your profile."
                },
                "backupPassword": {
                    "body1": "Please enter your backup password.",
                    "body2": "This is the password you set when you first created your backup."
                },
                "success": {
                    "title": "You have successfully recovered your backup",
                    "body": "You can now set up your new profile."
                }
            },
            "shimmerClaiming": {
                "claimRewards": {
                    "title": "Your Shimmer staking rewards",
                    "body": "Check that your Shimmer staking rewards are correct. You may need to search multiple times to find your full balance."
                },
                "success": {
                    "title": "Shimmer claimed",
                    "body": "You have successfully claimed your Shimmer tokens.",
                    "totalRewards": "Total rewards",
                    "successfullyFound": "Successfully found {amount}"
                }
            },
            "congratulations": {
                "title": "Profile setup almost complete...",
                "fundsMigrated": "Funds migrated",
                "body": "Your new profile will be ready once the dashboard has successfully loaded.",
                "ledgerHint": "Do not disconnect your Ledger device until the dashboard has finished loading.",
                "softwareMigratedBody": "You have successfully migrated your funds to the new network",
                "fireflyLedgerBody": "Your Ledger profile was successfully recovered and you can now continue.",
                "trinityLedgerBody": "You have successfully migrated your Ledger to the new network.",
                "exportMigration": "Export migration log and finish setup"
            }
        },
        "setupLedger": {
            "progress1": "Ledgera xwe re were girêdan",
            "progress2": "Navnîşanekê çêke",
            "progress3": "Ledger app beguherin",
            "progress4": "Veguheztina krediyê",
            "watchVideo": "Tutorial vîdyoyê temaşe bikin",
            "videoGuide": "Rênasî ya vîdeo ya derbasbûna Ledgerê"
        },
        "ledgerInstallationGuide": {
            "title": "Have you installed the {network} app on your Ledger device?",
            "body1": "Before you proceed, you must use Ledger Live to find and install the {network} app.",
            "body2": "Make sure your Ledger firmware is up-to-date. Any pre-installed apps should be updated to their latest versions.",
            "action": "Yes, I've installed the {network} app"
        },
        "importFromLedger": {
            "title": "Restore or Migrate your Ledger",
            "body": "Restore an existing Firefly Ledger profile, or migrate your funds from Trinity.",
            "haveFireflyLedger": "I have a Firefly Ledger backup",
            "haveFireflyLedgerDescription": "Restore a Firefly profile",
            "haveTrinityLedger": "I have a Trinity Ledger backup",
            "haveTrinityLedgerDescription": "Migrate a Trinity profile"
        },
        "connectLedger": {
            "title": "Connect your Ledger to Firefly",
            "body": "For your Ledger device to be found by Firefly, please ensure that the official Ledger Live application is closed.",
            "connect": "Connect your Ledger device",
            "unlock": "Unlock your Ledger with its pin",
            "openApp": "Open the Shimmer app on your Ledger",
            "tips": "Tips if your Ledger isn’t connecting"
        },
        "restoreFromFireflyLedger": {
            "title": "Restore Your Ledger Profile",
            "body": "Press restore to complete the setup process and restore your wallets, balances and transaction history.",
            "restoring": "Restoring from Ledger..."
        },
        "legacyLedgerIntro": {
            "title": "Start your Ledger migration using Firefly",
            "body1": "Firefly will help you to transfer your tokens to the new Chrysalis network.",
            "body2": "After the migration, you will be able to send and receive your tokens using your Ledger with Firefly.",
            "readMore": "What to expect from the migration process"
        },
        "generateNewLedgerAddress": {
            "title": "Generate new address",
            "body": "You need to generate a new address to migrate your tokens with Firefly. Click the button below to continue.",
            "confirmTitle": "Confirm the new address",
            "confirmBody": "For security, please compare the address generated on your Ledger device with the one displayed below. If they match, press both buttons on your Ledger as prompted.",
            "confirmedTitle": "Address confirmed",
            "confirmedBody": "You have confirmed that the address in Firefly matches the one on your Ledger device.",
            "generating": "Generating address"
        },
        "switchLedgerApps": {
            "title": "Switch Ledger apps",
            "body": "Please switch to the {legacy} app on your Ledger device to continue migration. When ready, press continue."
        },
        "selectLedgerAccountIndex": {
            "title": "Choose Ledger account index",
            "body": "Choose the Ledger account index you used with Trinity. For most users this will be the default index of 0.",
            "accountIndex": "Account Index",
            "accountPage": "Account Page",
            "standard": "Standard",
            "expert": "Expert",
            "takingAWhile": "This is taking a while...",
            "notGeneratingAddresses": "Is your Ledger generating addresses?",
            "reinstallLegacy": "If not, disconnect the device and try again. If the issue persists, you may need to reinstall the {legacy} app."
        },
        "settings": {
            "settings": "Mîhengên",
            "general": {
                "title": "General",
                "description": "Configure your app's appearance and other general settings"
            },
            "profile": {
                "title": "Jînname",
                "description": "Navê profîla xwe biguherîne an jî avatarekê sazbike"
            },
            "network": {
                "title": "Network"
            },
            "collectibles": {
                "title": "Collectibles"
            },
            "security": {
                "title": "Ewlehî",
                "description": "Pêborîna xwe biguherîne û mihengên ewlehiyê çêbike"
            },
            "advanced": {
                "title": "Advanced",
                "description": "Tools and manual settings for technical users"
            },
            "helpAndInfo": {
                "title": "Alîkarî & Agahî",
                "description": "Bersiva pirsekê bibînin an jî derbarê pirsgirêkê arîkarî bistînin"
            },
            "sync": {
                "title": "Cuzdanka sekronîze bike",
                "description": ""
            },
            "theme": {
                "title": "Mijad",
                "description": "",
                "advice": "If you change your system theme, you may need to restart Firefly to see the effects"
            },
            "language": {
                "title": "Ziman",
                "description": ""
            },
            "currency": {
                "title": "Diravcins",
                "description": "Mayîn vergerê cih dike û mihengên girafîkî nûjen dike"
            },
            "notifications": {
                "title": "Hişyarî",
                "description": "Jibo bûyerên kirarîyê hişyariyên sîstemî"
            },
            "networkStatus": {
                "title": "Network status",
                "description": "Displays the status of the node you are currently connected to"
            },
            "exportStronghold": {
                "title": "Export backup",
                "description": "Barê dosyayek Stronghold bikin\n- cîhgira hatî pêborîkirin cuzdank û bûyerên kiryarên we yên dawî"
            },
            "appLock": {
                "title": "Automatic logout",
                "description": "Dema bêçalaktiyê berî ku çenteyên we kilît bibin û hûn ji nav derkevin"
            },
            "strongholdPasswordTimeout": {
                "title": "Stronghold Timeout",
                "description": "Length of time before your Stronghold password is required again"
            },
            "maxMediaSize": {
                "title": "Maximum media size",
                "description": "NFT media with sizes greater than this limit will not be downloaded and a placeholder representing the media type will be displayed instead"
            },
            "maxMediaDownloadTime": {
                "title": "Maximum download time",
                "description": "NFT media which take longer than this limit to download will be canceled and a placeholder representing the media type will be displayed instead"
            },
            "refreshNftMedia": {
                "title": "Refresh NFT media",
                "description": "NFT media cached for this account will be deleted and then downloaded again"
            },
            "changePassword": {
                "title": "Pêborînê biguherînê",
                "description": "Your password is used to secure your wallets. You must use a strong password to protect your funds"
            },
            "changePincode": {
                "title": "Qoda PIN'ê biguherîne",
                "description": "PIN mayîn û veşarîyên kirarîyê we diparêze",
                "currentPincode": "PIN'a heyî",
                "newPincode": "PIN'a nû",
                "confirmNewPincode": "PIN'a nû tomarbike",
                "action": "PIN'ê biguherîne"
            },
            "changeProfileName": {
                "title": "Change profile name",
                "description": "Change your Firefly profile name",
                "success": "You changed your profile name"
            },
            "walletFinder": {
                "title": "Wallet finder",
                "description": "Perform an extended search of your previously used wallets"
            },
            "hiddenAccounts": {
                "title": "Cuzdankên veşartî",
                "description": "Selecting this options will show wallets that were previously hidden"
            },
            "deleteProfile": {
                "title": "Profîlê jêbibe",
                "description": "Deletes your entire profile, wallets and transaction history. Make sure you have a backup"
            },
            "deepLinks": {
                "title": "Deep links",
                "description": "Automatically fill transaction data in Firefly upon clicking a deep link starting with {appProtocol}://"
            },
            "networkInformation": {
                "title": "Network information",
                "connectedTo": "Connected to"
            },
            "configureNodeList": {
                "title": "Node configuration",
                "description": "Manage the list of nodes you connect to",
                "primaryNode": "Girêdana yekemîn",
                "excludeNode": "Girêdanê lê neke",
                "includeNode": "Girêdanê lê bike",
                "editDetails": "Edit details",
                "viewInfo": "View info",
                "setAsPrimary": "Set primary node",
                "unsetAsPrimary": "Clear primary node",
                "removeNode": "Girêdanê jêbibe",
                "includeOfficialNodeList": "Lîsteya girêdanên fermî tevil bike",
                "noNodes": "There are no nodes, unable to connect to the network",
                "noNodesAuto": "There are no nodes, automatic selection will be used instead"
            },
            "localProofOfWork": {
                "title": "Proof of work",
                "description": "Complete proof of work locally on your device or outsource to the node"
            },
            "errorLog": {
                "title": "Têketina çewtiyê",
                "description": "Jibo çareserkirina pirsgrêkekê şaşîtiyan bibînin"
            },
            "crashReporting": {
                "title": "Crash reports",
                "body": "Help the developers improve Firefly by automatically sending diagnostic data when an error or crash occurs",
                "checkbox": "Send crash reports",
                "advice": "Please restart the Firefly application to {sendCrashReports, select, true {start sharing crash reports} false {stop sharing crash reports} other {apply this change}}"
            },
            "diagnostics": {
                "title": "Pêderk",
                "description": "Zanyarîyên sîstem û sazîyê bibînin"
            },
            "migrateLedgerIndex": {
                "title": "Migrate Ledger index",
                "description": "Migrate another Trinity account index"
            },
            "troubleshoot": {
                "title": "Sererastkirin",
                "description": "Sêrbazê Çareserkirina Pirsgirêkan bikar bînin ku pirsgirêkên hevpar çareser bikin"
            },
            "documentation": {
                "title": "Belgekirin",
                "description": "Jibo hînbûna rêveberin kar hemî hurgulîyan binêrin belgedankê"
            },
            "faq": {
                "title": "Pirsên tê kirin",
                "title2": "Frequently asked questions",
                "description": "PPP bibînin ku ji pirsgirêk an pirsek hevpar re bibin alîkar"
            },
            "discord": {
                "title": "Lihevnekirin",
                "description": "Arîkarîyê ji civaka IOTA Discord bistînin"
            },
            "about": {
                "title": "Ji dor",
                "description": ""
            },
            "reportAnIssue": {
                "title": "Pirsgirêkê ragehîne",
                "description": "Report a bug to the developers. Check through to make sure it hasn't already been reported"
            },
            "developerToggle": {
                "title": "Developer Mode",
                "description": "Switch developer mode on to enable more features in experimental state"
            }
        },
        "login": {
            "pleaseWait": "Please wait {time, plural, one {# second} other {# seconds}}",
            "incorrectAttempts": "{attempts, plural, one {# incorrect attempt} other {# incorrect attempts}}",
            "hintStronghold": "Your Stronghold's version is out of date. Please log in to update your Stronghold."
        },
        "loadProfile": {
            "loginSteps": {
                "buildProfileManager": "Initialising profile manager",
                "updateNodeInfo": "Checking node health",
                "recoverAccounts": "Generating accounts",
                "loadAccounts": "Syncing accounts",
                "loadAssets": "Loading native assets",
                "loadActivities": "Building activity history",
                "setStrongholdStatus": "Securing stronghold",
                "startBackgroundSync": "Starting background sync",
                "loggingIn": "Loading dashboard"
            }
        },
        "dashboard": {
            "network": {
                "operational": "Network operational",
                "degraded": "Network degraded",
                "down": "Network down",
                "disconnected": "Disconnected from node",
                "status": "Hal",
                "messagesPerSecond": "Peyam di sanîyek de",
                "referencedRate": "Referenced rate"
            },
            "profileModal": {
                "allSettings": "All settings",
                "profileApplication": "Profile, application, security",
                "logout": "Derkeve",
                "stronghold": {
                    "title": "Profile lock",
                    "locked": "Stronghold locked",
                    "unlocked": "Stronghold unlocked"
                },
                "hardware": {
                    "title": "Hardware Device",
                    "statuses": {
                        "appNotOpen": "Ledger unlocked but app not open",
                        "correctAppOpen": "Ledger unlocked and app open ",
                        "locked": "Ledger securely locked",
                        "mnemonicMismatch": "Wrong Ledger or mnemonic",
                        "notConnected": "Ledger not connected",
                        "otherConnected": "App open"
                    }
                },
                "backup": {
                    "title": "Backup your wallets",
                    "lastBackup": "You last backed up {date}",
                    "notBackedUp": "Not backed up",
                    "button": "Backup"
                },
                "version": {
                    "title": "New update available",
                    "updateVersion": "Firefly v{version}",
                    "button": "Update"
                }
            },
            "drawers": {
                "networkConfig": {
                    "addChain": {
                        "title": "Add chain"
                    },
                    "chain": {
                        "chainId": "Chain ID",
                        "aliasAddress": "Alias Address",
                        "iscpEndpoint": "ISCP Endpoint",
                        "explorerEndpoint": "Explorer Endpoint (optional)",
                        "errors": {
                            "cannotBeEmpty": "Name cannot be empty",
                            "nameTooLong": "Name is too long",
                            "aliasAddressWrongFormat": "Must be in either hex or Bech32 format",
                            "aliasAddressAlreadyInUse": "Alias address already in use",
                            "invalidUrl": "Invalid URL"
                        }
                    },
                    "chainDepositAddress": {
                        "title": "Chain deposit address",
                        "networkTitle": "Network deposit address"
                    },
                    "chainInformation": {
                        "title": "Chain information"
                    },
                    "confirmLedgerEvmAddress": {
                        "title": "Confirm EVM address",
                        "header": "We have generated your EVM address"
                    },
                    "connectedChains": {
                        "title": "Connected chains"
                    },
                    "connectLedgerDevice": {
                        "title": "Connect Ledger Device",
                        "header": "Open the Ethereum app",
                        "body": "For your Ledger device to be found by Firefly, please ensure that the official Ledger Live application is closed before following these steps.",
                        "requirements": {
                            "connect": "Connect and unlock your Ledger",
                            "openApp": "Open the Ethereum app on your Ledger"
                        }
                    },
                    "editChain": {
                        "title": "Edit chain"
                    },
                    "removeChain": {
                        "title": "Remove chain"
                    }
                }
            }
        },
        "staking": {
            "welcome": "Welcome to the staking dashboard!",
            "status": {
                "upcoming": "Event not started",
                "commencing": "Pre-staking open",
                "holdingActive": "Staking in progress",
                "holdingInactive": "Staking open",
                "inactive": "Staking not detected",
                "ended": "Staking ended"
            },
            "summary": {
                "stakedFunds": "Staked funds"
            },
            "info": {
                "headers": {
                    "upcoming": "Check back later",
                    "commencing": "Pre-staking is open",
                    "holding": "{duration} of staking left",
                    "ended": "Staking has now ended",
                    "inactive": "No staking events detected"
                },
                "bodies": {
                    "upcoming": "Stake your {token} tokens to automatically receive rewards every 10 seconds once staking starts on {date}.",
                    "commencing": "Stake your {token} tokens to automatically receive rewards every 10 seconds once staking starts on {date}.",
                    "holdingAndStaking": "You automatically receive rewards every 10 seconds.",
                    "holdingAndNotStaking": "Stake your {token} tokens to receive rewards every 10 seconds.",
                    "endedAndDidStake": "{token} rewards will be distributed to your wallet once the network launches.",
                    "endedAndDidNotStake": "You did not participate in this airdrop.",
                    "endedAndDidNotReachMinRewards": "You did not stake enough {token} tokens to reach the minimum airdrop rewards.",
                    "inactive": "Open network configuration in the advanced settings and make sure the current node has the \"Participation\" feature by clicking \"View info\"."
                }
            },
            "airdrops": {
                "holding": "Remaining",
                "commencing": "Until staking begins",
                "currentStakingPeriod": "Current staking period",
                "totalWalletRewards": "Total wallet rewards",
                "assembly": {
                    "name": "Assembly",
                    "description": "Assembly is a permissionless, highly scalable multi-chain network to build and deploy composable smart contracts. Assembly is the future of web3. "
                },
                "shimmer": {
                    "name": "Shimmer",
                    "description": "The incentivized staging network to advance major innovations on IOTA. Whatever happens, happens. How Shimmer evolves is up to you."
                }
            },
            "banners": {
                "new": "New Event",
                "complete": "Complete"
            }
        },
        "picker": {
            "color": {
                "title": "Color picker",
                "hexCode": "Color hex code"
            }
        },
        "collectibles": {
            "gallery": {
                "title": "Collectibles",
                "emptyTitle": "No collectibles",
                "noResults": "No results",
                "emptyDescription": "Deposit or Receive your first collectible now!"
            },
            "details": {
                "storageDepositDescription": "A refundable deposit required to store your NFT on the Tangle.",
                "attributes": "Attributes",
                "menu": {
                    "download": "Download",
                    "setPfp": "Set NFT profile pic",
                    "unsetPfp": "Unset NFT profile pic",
                    "view": "View media in browser",
                    "burn": "Burn NFT"
                }
            }
        },
        "governance": {
            "votingPower": {
                "title": "Voting power",
                "maximal": "Maximal voting power: {value}",
                "manage": "Manage voting power"
            },
            "proposalsDetails": {
                "title": "Details",
                "totalProposals": "Total proposals",
                "activeProposals": "Active proposals",
                "votingProposals": "Proposals you are voting on",
                "votedProposals": "Total proposals you voted on"
            },
            "proposals": {
                "title": "Proposals",
                "voted": "Voted",
                "successEdit": "Proposal successfully edited",
                "successAdd": "{numberOfProposals, select, one {Proposal} other {Proposals}} successfully added",
                "successAddAll": "{numberOfProposals, select, one {Proposal} other {Proposals}} successfully added to all accounts",
                "successRemove": "Proposal successfully removed",
                "emptyTitle": "No proposals"
            },
            "statusTimeline": {
                "upcoming": "Announcement",
                "commencing": "Voting open",
                "holding": "Counting starts",
                "ended": "Counting stops"
            },
            "details": {
                "yourVote": {
                    "title": "Your vote",
                    "total": "Total votes counted",
                    "power": "Voting power"
                },
                "proposalInformation": {
                    "title": "Proposal information",
                    "votingOpens": "Voting opens on",
                    "countingStarts": "Counting starts on",
                    "countingEnds": "Counting ends on",
                    "countingEnded": "Counting ended on",
                    "eventId": "Event ID",
                    "nodeUrl": "Node URL"
                },
                "fetching": "Fetching proposal data",
                "hintVote": "You can not vote on a proposal that is in the announcement phase, voting will open in {time}."
            }
        },
        "updateStronghold": {
            "update": {
                "title": "Update Stronghold",
                "loginBody": "Your Stronghold's version is out of date. Provide your password to update Stronghold.",
                "recoveryBody": "The imported Stronghold’s version is out of date, to continue we will need to update the stronghold to the latest version."
            },
            "updateBackup": {
                "loginTitle": "Stronghold updated",
                "loginBody": "It's all good now - you're running the latest Stronghold version",
                "recoveryTitle": "Stronghold is successfully recovered and updated",
                "recoveryBody": "You can now continue setting up your wallet",
                "hint": "We highly recommend to delete all previous Stronghold backup files and save a new one"
            },
            "changePassword": {
                "hint": "Your Stronghold was out of date and has been updated. We recommend that you change your Stronghold password."
            }
        }
    },
    "popups": {
        "enableLedgerBlindSigning": {
            "title": "Enable Blind Signing",
            "info": "In order to confirm this transaction you need to enable Blind Signing on your ledger device.",
            "step_1": "Connect and unlock your Ledger Device",
            "step_2": "Open Shimmer Application",
            "step_3": "Press the right button to navigate to Settings. Then press both buttons to validate. Your Ledger device displays Blind Signing.",
            "step_4": "Press both buttons to enable transaction blind signing. The device displays Enabled. You're done."
        },
        "balanceBreakdown": {
            "title": "Balance breakdown",
            "available": {
                "title": "Available",
                "subtitle": "Funds fully available for spending"
            },
            "pending": {
                "title": "Pending",
                "subtitle": "Temporarily locked in transactions"
            },
            "locked": {
                "title": "Locked",
                "subtitle": "Temporarily locked for governance"
            },
            "storageDeposit": {
                "title": "Storage deposit",
                "subtitle": "These funds are reserved for storing native assets."
            },
            "totalBalance": {
                "title": "Total balance",
                "subtitle": ""
            },
            "basicOutputs": {
                "title": "Native Tokens",
                "subtitle": "Reserved for Native Token storage"
            },
            "nftOutputs": {
                "title": "NFTs",
                "subtitle": "Reserved for NFT storage"
            },
            "aliasOutputs": {
                "title": "Aliases",
                "subtitle": "Reserved for Alias storage"
            },
            "foundryOutputs": {
                "title": "Foundries",
                "subtitle": "Reserved for Native Token Foundry storage"
            },
            "unclaimed": {
                "title": "Unclaimed transaction",
                "subtitle": "Temporarily locked in unclaimed transactions"
            },
            "timelock": {
                "title": "Time lock",
                "subtitle": "Temporarily locked in timelocked transactions"
            },
            "storageDepositReturn": {
                "title": "SDRUC",
                "subtitle": "Temporarily locked in Storage Deposit Return"
            },
            "governance": {
                "title": "Governance",
                "subtitle": "Reserved for voting power"
            },
            "minimizeStorageDepositButton": "Minimize storage deposit"
        },
        "minimizeStorageDeposit": {
            "title": "Minimize storage deposit",
            "description": "Consolidate outputs to minimize your required storage deposit and increase your available balance.",
            "confirmButton": "Consolidate"
        },
        "alias": {
            "title": "Confirm alias creation"
        },
        "password": {
            "title": "Nasnav pêwîste",
            "subtitle": "Please provide your password to unlock your wallets",
            "backup": "Ji kerema xwe şîfreya xwe binivîsin da ku hûn hilanînê bişînin"
        },
        "qr": {
            "title": "Nasnav a te ya QR"
        },
        "appUpdate": {
            "title": "Check for updates",
            "installedVersion": "Installed version",
            "newVerion": "New version",
            "stage": "Stage",
            "prod": "Production",
            "alpha": "Alpha",
            "beta": "Beta",
            "releasedAt": "Released at",
            "updateAvailable": "Update is available",
            "updatesDisabled": "There are updates available, but in-app upgrade is disabled for your operating system.",
            "latestInstalled": "You are running the latest and safest version"
        },
        "backupStronghold": {
            "title": "Backup your stronghold file",
            "body": "It is important to back up your wallet regularly to ensure you have a copy of your wallets and transaction history. If you lose your backup and recovery phrase you will lose access to your funds."
        },
        "deeplinkAccountSwitch": {
            "title": "Select a wallet",
            "body": "You just followed a deep link. Please select the wallet with which you want to continue."
        },
        "deeplinkError": {
            "title": "Failed link",
            "body": "This link failed or is invalid. Please try again or double check the source of the link."
        },
        "deleteAccount": {
            "title": "Jêbibe {name}?",
            "body": "Are you sure you want to delete this wallet?",
            "hint": "Note: once deleted, you can restore this wallet by using the \"Wallet Finder\" in the settings.",
            "typePassword": "Jibo pêjirandinê pêborîna cuzdaneka xwe binivîse.",
            "hideAccount": "Cuzdankê jêbibe",
            "errorTitle": "Nayê jêbirin {name}",
            "errorBody1": "Hûn nikarin vê cuzdankê jêbibin, divê bi kêmanî yek ya te hebe."
        },
        "externalUrl": {
            "title": "Open URL in Browser",
            "body": "Are you sure you want to open \"{url}\" in the browser?",
            "hint": "This URL is unknown to Firefly. Please double check the URL before opening it.",
            "action": "Open URL",
            "invalidProtocol": "Cannot open URL with invalid protocol"
        },
        "hideAccount": {
            "title": "Hilne {name}?",
            "body": "Hûn dikarin vê cuzdankê paşê bi çalakkirina \"Nîşan hesabên veşartî\" di Mîhengên Pêşkeftî de bibînin.",
            "typePassword": "Jibo pêjirandinê pêborîna cuzdaneka xwe binivîse.",
            "hideAccount": "Cuzdankê veşêre",
            "errorTitle": "Nayê jêbirin {name}",
            "errorBody1": "Ji bo veşartina cuzdank divê 0 bîlançoya wê hebe.",
            "errorBody2": "Niha we {balance} li ser vê cuzdank maye. Ji kerema xwe van dravî veguherînin hesabek cûda û dîsa biceribînin.",
            "errorBody3": "Hûn nikarin vê cuzdankê jêbibin, divê bi kêmanî yek ya te hebe."
        },
        "addressHistory": {
            "title": "{name} dîroka navnîşanê",
            "currentBalance": "Balance: {balance}",
            "internal": "Internal Address",
            "external": "Deposit Address"
        },
        "excludeNode": {
            "title": "Exclude node",
            "body": "Are you sure you want to exclude {url} from the available node pool?"
        },
        "unsetAsPrimaryNode": {
            "title": "Clear primary node",
            "body": "Are you sure you want to clear {url} as the primary node?"
        },
        "node": {
            "titleAdd": "Girêkê zêde bike",
            "titleUpdate": "Girêk nûjen",
            "titleRemove": "Girêdanê jêbibe",
            "titleRemoveAll": "Remove all nodes",
            "titleDetails": "Derbarê girê",
            "titleInfo": "Node information",
            "addingNode": "Adding node",
            "updatingNode": "Updating node",
            "loadingNodeInfo": "Loading node info",
            "nodeAddress": "Navnîşana girê",
            "optionalUsername": "Bikarhêner (optional)",
            "optionalPassword": "Pêborîn (optional)",
            "optionalJwt": "JSON web token (optional)",
            "setAsPrimaryNode": "Wekî girêya yekemîn bihesibîn",
            "removeConfirmation": "Tu jêbirana dosyê piştrastî?",
            "info": {
                "general": {
                    "tab": "General",
                    "name": "Name",
                    "url": "URL",
                    "version": "Version",
                    "latestMilestone": "Latest milestone",
                    "confirmedMilestone": "Confirmed milestone",
                    "pruningIndex": "Pruning index",
                    "features": "Features"
                },
                "metrics": {
                    "tab": "Metrics",
                    "blocksPerSecond": "Blocks per second",
                    "referencedBlocksPerSecond": "Referenced blocks per second",
                    "referencedRate": "Referenced rate",
                    "latestMilestone": "Latest milestone",
                    "confirmedMilestone": "Confirmed milestone"
                },
                "protocol": {
                    "tab": "Protocol",
                    "network": "Network",
                    "bech32Hrp": "Bech32 HRP",
                    "tokenSupply": "Token supply",
                    "version": "Version",
                    "minPowScore": "Min PoW Score"
                },
                "baseToken": {
                    "tab": "Base token",
                    "token": "Token",
                    "tickerSymbol": "Ticker",
                    "unit": "Unit",
                    "subunit": "Sub-unit",
                    "decimals": "Decimals",
                    "useMetricPrefix": "Use metric prefix"
                }
            }
        },
        "switchNetwork": {
            "title": "Switch network",
            "newNetwork": "New network",
            "resetWarning": "Changing networks will log you out and reset all accounts, balances, and transaction history for this profile.",
            "switchingNetwork": "Switching network",
            "typePassword": "Type your password to switch to:"
        },
        "errorLog": {
            "title": "Bûyerên çewtîyê",
            "empty": "Bûyerên çewtîyê valane."
        },
        "deleteProfile": {
            "title": "Delete profile",
            "confirmation": "Ma hûn pê ewle ne ku hûn dixwazin vê profîlê jê bibin? Ev operasyon nayê paşve xistin.",
            "typePassword": "Jibo pêjirandinê pêborîna xwe binivîse."
        },
        "diagnostics": {
            "title": "Diagnostics",
            "node": "Girê",
            "platform": "Platform",
            "platformVersion": "Versîyona Platformê",
            "platformArchitecture": "Platforma Erdezyar",
            "cpuCount": "Hijmara CPU",
            "totalMem": "Bîrkarîya Giştî",
            "freeMem": "Bîrkarîya Vala",
            "userPath": "Rêya bikarhêner"
        },
        "transaction": {
            "title": "Send asset",
            "body": "Wê tu ewqasî {amount} hinêrî",
            "selectToken": "Select a token",
            "selectAmount": "Send {tokenName}",
            "selectRecipient": "Send {assetName} to",
            "transactionSummary": "Transaction to {recipient}",
            "surplusIncluded": "This transaction contains a surplus amount. Please double check this is the amount you want to send.",
            "sendingFromStakedAccount": "You are sending a transfer from a wallet that is currently being staked. This may unstake your tokens. Feel free to send the transfer but you may need to restake your remaining tokens afterwards.",
            "sendingFromStakedAccountBelowMinReward": "You are sending a transfer from a wallet that has not yet reached the minimum staking rewards. This may unstake your tokens and you may lose your staking rewards on this wallet."
        },
        "walletFinder": {
            "title": "Wallet finder",
            "body": "Perform a more exhaustive search of addresses to find missing balances and wallets.",
            "accountsSearched": "Wallets searched",
            "accountsFound": "Wallets found",
            "totalWalletBalance": "Total balance",
            "searchAgainHint": "Is your balance or number of wallets incorrect? Search again until your full balance is shown."
        },
        "riskFunds": {
            "title": "Hişyarî: demê barkirinê mayîn dibin metirsî yê de ye",
            "body1": "Berî ku hûn dest bi barkirinê bikin pir tê pêşniyar kirin ku hemî hûn dravê xwe ewleh bikin. Heke hûn dravê xwe ewle nekin, dravê we di bin xetera diziyê de bin.",
            "body2": "Tête pêşniyar kirin ku pêvajo ji bo navnîşanên bi asta xetereya navîn an mezintir ji nû ve werin destpêkirin."
        },
        "missingBundle": {
            "title": "Warning: funds at risk during migration",
            "body": "Di navnîşanên karanîn de hevsengiyek we heye, lê ji bo ewlehiya wê ji bo agahdariyê hewce nake. Heke we demek dirêj berê bazirganî kiribe ev dikare pêk were. Hûn dikarin berdewam bikin lê dê {value} di dema barkirinê de bikeve bin metirsiyê.",
            "learnMore": "Zêdetir zanyarî yê navnîşanên karhatî agahdar bibin",
            "proceed": "Ez metirsî yê didim berçav"
        },
        "snapshot": {
            "title": "Barkirina tora ongoing'ê bilind bike",
            "body": "Nûvekirina torgiloka Chrysalis dest pê kir.",
            "bodyMigration": "Koçberî heya ku xelas bibe seqet e.",
            "bodyFirefly": "Firefly heya ku xelas bibe seqet e.\nKoçkirina Tokensd jî dê paşê gengaz be."
        },
        "ledgerNotConnected": {
            "title": "Connect your Ledger",
            "notConnected": "Connect your Ledger device to continue.",
            "locked": "Unlock your Ledger device to continue.",
            "appNotOpen": "Open the Shimmer app on your Ledger device to continue.",
            "correctAppOpen": "Ledger successfully connected, please continue."
        },
        "ledgerConfirmation": {
            "confirm": "To proceed, confirm the prompt displayed on your Ledger device"
        },
        "ledgerAppGuide": {
            "title": "Guide to installing the {legacy} app",
            "steps": {
                "0": "Install and open the Ledger Live application",
                "1": "Ensure that your Ledger is connected",
                "2": "Search for the {legacy} app. You may need to enable Ledger Live developer mode.",
                "3": "Install the {legacy} app",
                "4": "Remember that it's important to close Ledger Live before returning to Firefly"
            }
        },
        "ledgerConnectionGuide": {
            "title": "Tips if your Ledger isn’t connecting",
            "steps": {
                "0": "Make sure Ledger Live is not open on your computer",
                "1": "Ensure you have unlocked your Ledger device with your PIN",
                "2": "Open the new IOTA app on your Ledger device",
                "3": {
                    "text": "Still no luck?",
                    "link": "Try the official Ledger support page"
                }
            }
        },
        "verifyLedgerTransaction": {
            "title": "Verify transaction",
            "info": "Compare and confirm the transaction information displayed on your ledger device against the information below."
        },
        "verifyInternalLedgerTransaction": {
            "title": "Verify internal transaction",
            "info": "Please confirm the internal transaction on your ledger.",
            "hint": "All assets will remain on your wallet when sending an internal transaction."
        },
        "ledgerAddress": {
            "title": "Confirm receive address",
            "body": "Confirm that the receive address displayed on your Ledger matches the one displayed below. If they match, press both buttons on your Ledger as prompted."
        },
        "ledgerMigrateIndex": {
            "title": "Do you need to migrate another Trinity account index?",
            "body": "You can also migrate later in Advanced Settings."
        },
        "exportTransactionHistory": {
            "title": "Export transaction history",
            "body": "Export the transaction history for the selected wallet. The exported file will be in .csv format.",
            "profileName": "Profile name:",
            "accountName": "Wallet name:",
            "typePassword": "Type your password to allow exporting"
        },
        "stakingManager": {
            "title": "Staking Management",
            "description": "When you stake a wallet, you send a transaction to yourself marking those funds as \"staked\". You can transfer the tokens at any time, but you won’t continue receiving staking rewards.",
            "totalFundsStaked": "Total funds staked",
            "stakedSuccessfully": "Your funds have been staked for {account}.",
            "unstakedSuccessfully": "Your funds have been unstaked for {account}.",
            "singleAccountHint": "Looking for your wallets? Firefly has changed. Toggle between your wallets in the top menu bar."
        },
        "stakingConfirmation": {
            "title": "Confirm Participation",
            "subtitleStake": "You are about to stake",
            "subtitleMerge": "You are about to merge",
            "multiAirdropWarning": "If you do not want to participate in both airdrops, you can opt-out below. You can unstake and restake to opt back in at any time.",
            "mergeStakeWarning": "Your funds will be staked for {airdrop}. To change which airdrops you want to participate in, unstake this wallet and stake it again.",
            "estimatedAirdrop": "Estimated rewards"
        },
        "newStakingPeriodNotification": {
            "title": "Staking phase {periodNumber} from {date}",
            "body": "IOTA staking for Assembly continues... Participate in phase {periodNumber} for 90 days. Stake your IOTA tokens and earn ASMB rewards!",
            "info": "Shimmer staking is now complete and only ASMB tokens will be distributed."
        },
        "shimmer-info": {
            "title": "About Shimmer",
            "body1": "Congratulations you have earned SMR tokens as a staking reward. Shimmer is an incentivized staging network to test major upgrades on IOTA.",
            "body2": "We aim to launch Shimmer in 2022. Your tokens will become available to transfer once the network launches."
        },
        "assembly-info": {
            "title": "About Assembly",
            "body1": "Congratulations you have earned ASMB tokens as a staking reward. Assembly is a multi-chain network for deploying scalable smart contracts on IOTA.",
            "body2": "We aim to launch Assembly in 2022. Your tokens will become available to transfer once the network launches."
        },
        "confirmDeveloperProfile": {
            "title": "You are creating a developer profile",
            "body": "You will be connected to the Chrysalis Devnet by default, and can switch networks manually. Only continue if you know what you are doing."
        },
        "crashReporting": {
            "title": "Crash reporting",
            "body": "Help the developers improve Firefly by automatically sending diagnostic data when an error or crash occurs. If selected, this will take effect after restarting Firefly.",
            "checkbox": "Send crash reports to the IOTA Foundation"
        },
        "legalUpdate": {
            "tosTitle": "Terms of Service",
            "privPolicyTitle": "Privacy Policy",
            "tosAndPrivPolicyBody": "We have updated Firefly's Terms of Service and Privacy Policy.",
            "tosBody": "We have updated Firefly's Terms of Service.",
            "privPolicyBody": "We have updated Firefly's Privacy Policy.",
            "tosAndPrivPolicyCheckbox": "I've read and I accept the updated Terms of Service and Privacy Policy",
            "tosCheckbox": "I've read and I accept the updated Terms of Service",
            "privPolicyCheckbox": "I've read and I accept the updated Privacy Policy"
        },
        "singleAccountGuide": {
            "title": "The way you use Firefly has changed",
            "body": "The content of each tab is now in the context of a single wallet. You can change the selected wallet from anywhere by using the switcher in the title bar.",
            "hint": "Can't find a wallet? Use the balance finder in the settings to discover previously used wallets."
        },
        "transactionDetails": {
            "title": "Transaction details",
            "giftedStorageDeposit": {
                "tooltipTitle": "Gift storage deposit",
                "tooltipDescription": "Amount kept by the recipient"
            }
        },
        "sendForm": {
            "title": "Send funds"
        },
        "tokenInformation": {
            "newTokenTitle": "New token",
            "verificationWarning": "This token is unverified. Compare the token metadata against the relevant team’s official website. Only verify tokens that you trust.",
            "tokenMetadata": {
                "standard": "Standard",
                "name": "Name",
                "tokenId": "Token ID",
                "url": "URL"
            },
            "buttons": {
                "verifyToken": "I verify this token"
            }
        },
        "sendNft": {
            "formTitle": "Send NFT",
            "confirmationTitle": "Confirm sending NFT",
            "property": {
                "nft": "NFT"
            }
        },
        "nativeToken": {
            "formTitle": "Mint native tokens",
            "confirmationTitle": "Mint native tokens",
            "property": {
                "totalSupply": "Total supply",
                "maximumSupply": "Maximum supply",
                "mintedTokens": "Minted tokens",
                "meltedTokens": "Melted tokens",
                "circulatingSupply": "Circulating supply",
                "aliasAddress": "Alias controller address",
                "standard": "Standard",
                "tokenName": "Name",
                "unit": "Unit",
                "subunit": "Subunit",
                "storageDeposit": "Storage Deposit",
                "description": "Description",
                "symbol": "Symbol",
                "decimals": "Decimals",
                "url": "URL",
                "logoUrl": "Logo URL",
                "logo": "Logo",
                "alias": "Alias",
                "assetId": "Asset Id"
            }
        },
        "importErc20Token": {
            "title": "Import ERC20 token",
            "property": {
                "chainId": "Chain ID",
                "tokenAddress": "Token address"
            },
            "success": "Imported {tokenSymbol} token",
            "error": "Unable to import ERC20 token"
        },
        "noAlias": {
            "title": "Unable to mint",
            "description": "You must own an alias output to mint native tokens. To continue, please create an alias first"
        },
        "mintNftForm": {
            "title": "Mint simple NFT",
            "errors": {
                "invalidMimetype": "Invalid MimeType, check if the file type is supported",
                "quantityTooSmall": "Quantity needs to be greater than 0",
                "quantityTooLarge": "Quantity needs to be smaller than 64",
                "emptyName": "Name is a required field",
                "invalidURI": "Invalid URI, please provide a valid URI",
                "notReachable": "URI not reachable, unable to check NFT type",
                "royaltiesMustBeObject": "Royalties must be an object",
                "royaltiesMustBeJSON": "Royalties must be a valid JSON",
                "invalidAddress": "Invalid address, must be a valid {networkHrp} address where royalties will be sent to",
                "invalidRoyaltyValue": "Invalid value, it must be a numeric decimal representative of the percentage required ie. 0.05",
                "invalidRoyaltyValueSum": "Invalid value, the sum of all royalties must be less than or equal to 1'",
                "attributesMustBeJSON": "Attributes must be a valid JSON",
                "attributesMustBeArrayOfObjects": "Attributes must be an array of objects",
                "attributesInvalidKeys": "Invalid key, attributes must have the keys \"trait_type\" and \"value\"",
                "attributesInvalidValues": "Invalid value, \"trait_type\" must be a non empty string and \"value\" must be a non empty string or a number"
            }
        },
        "faucetRequest": {
            "title": "Faucet request",
            "body": "Are you sure you want to request {token} tokens from the {network} faucet?"
        },
        "manageVotingPower": {
            "title": "Manage voting power",
            "body": "Define your voting power to vote on proposals.",
            "hint": "All funds that you allocate to voting are locked. In order to make them spendable again, you need to decrease your voting power. This affects all proposals with an active vote.",
            "amountZero": "Please be aware that setting your voting power to zero will stop all your votes for all proposals you are currently voting on."
        },
        "addProposal": {
            "title": "Add proposal",
            "body": "Please provide the information listed below to add a proposal.",
            "addToAllAccounts": "Add the proposal to all accounts"
        },
        "editProposal": {
            "title": "Edit proposal",
            "body": "Please provide the new url for the node that contains this proposal."
        },
        "voteForProposal": {
            "title": "Vote for proposal",
            "body": "You're about to vote for {proposal} proposal.",
            "key": "Your voting power",
            "hasAbstained": "You are abstaining from answering {numberOfQuestions, plural, one {# question} other {# questions}}.",
            "noVotingPower": "You do not have any voting power. Please increase your voting power from the Governance dashboard."
        },
        "revote": {
            "title": "Revote on proposals",
            "body": "Changing your voting power temporarily stops your votes for all proposals from being counted. Simply click \"Revote\" to resume voting.",
            "hint": "Firefly remembers all of the proposals and answer options you previously voted for."
        },
        "removeProposal": {
            "title": "Remove proposal",
            "body": "Are you sure you want to remove this proposal?",
            "hint": "Please note that removing a proposal during the counting period will stop your votes but won't impact any votes that have already been counted."
        },
        "stopVoting": {
            "title": "Stop voting",
            "body": "You're about to stop voting for the {proposalName} proposal.",
            "hint": "Please note that stopping voting during the counting period won't impact any votes that have already been counted."
        },
        "nodeAuthRequired": {
            "title": "Authentication required",
            "body": "This node requires additional authentication. Please fill in the appropriate information."
        }
    },
    "charts": {
        "incomingMi": "Yên hatî {value}",
        "outgoingMi": "Yên çûyî {value}",
        "portoflio": "Portfolio",
        "token": "Token",
        "holdings": "Holdings",
        "accountValue": "Mayîna Cuzdankê",
        "accountActivity": "Çalakîya Cuzdankê",
        "timeframe1Hour": "1 demjimêr",
        "timeframe1Day": "1 roj",
        "timeframe1Week": "1 hefte",
        "timeframe1Month": "1 mang"
    },
    "actions": {
        "apply": "Apply",
        "continue": "Berdewam",
        "back": "Şûnde",
        "previous": "Previous",
        "next": "Next",
        "cancel": "Betal",
        "close": "Derkeve",
        "dismiss": "Devjêberde",
        "claim": "Claim",
        "claiming": "Claiming",
        "claimingRewards": "Claiming rewards",
        "reject": "Reject",
        "confirmRejection": {
            "title": "Reject transaction",
            "description": "Are you sure you want to reject this transaction?",
            "node": "Please note that rejecting a transaction only hides it from your Activity feed"
        },
        "confirmTokenBurn": {
            "title": "Burn {assetName}",
            "hint": "Please note that burning a token may free storage deposit attached to it and is not reversible"
        },
        "confirmNftBurn": {
            "title": "Burn {nftName}",
            "description": "Are you sure you want to burn this NFT?",
            "hint": "Please note that burning an NFT frees the storage deposit attached to it and is not reversible."
        },
        "proceedAnyway": "Dîsa jî bidome",
        "save": "Tomarkirin",
        "importSeed": "Seed'ek heyî barbikê hundir",
        "restoreWallet": {
            "iota": "Migrate or restore a wallet",
            "shimmer": "Restore Shimmer profile",
            "testnet": "Restore Testnet profile",
            "custom": "Restore Custom Network profile"
        },
        "restoreWalletDescription": {
            "iota": "Migrate to Chrysalis or restore an existing wallet",
            "shimmer": "Restore an existing Shimmer profile",
            "testnet": "Restore an existing Testnet profile",
            "custom": "Restore an existing Custom Network profile"
        },
        "refreshNftMedia": {
            "title": "Refresh NFT media",
            "description": "Do you want to delete and re-download all NFT media for this account?"
        },
        "createWallet": "Create a new {network} profile",
        "createWalletDescription": "Create a fresh profile running on {network, select, iota {Chrysalis} shimmer {Shimmer} testnet {Testnet} custom {Custom Network} other {Unknown}}",
        "claimShimmer": "Claim Shimmer staking rewards",
        "claimShimmerDescription": "Import IOTA profile and claim staking rewards",
        "createAlias": "Create alias",
        "createAliasDescription": "Create alias output",
        "savePassword": "Pêborînê tomar bike",
        "useBiometric": "Ewlehîya bîyometrîk bikarbînin",
        "setupPinCode": "Setup PIN code",
        "setPin": "Set PIN",
        "setPinCode": "Set PIN code",
        "confirmPin": "Confirm PIN",
        "confirmPinCode": "Confirm PIN code",
        "enterYourPin": "PIN'a xwe têkevê",
        "saveBackupFile": "Dosya cîhgir tomar bike",
        "iveWrittenRecoveryPhrase": "Min peyvên rizgarkirinê not stand",
        "verifyRecoveryPhrase": "Şîfra Xilaskirinê rastke. ",
        "revealRecoveryPhrase": "Reveal recovery phrase",
        "checkAgain": "Dîsa kontrol bike",
        "importFromFile": "Ji dosyayê barbikê hundir",
        "send": "Rêke",
        "receive": "Wergir",
        "create": "Çêkê",
        "updateAndContinue": "Update and continue",
        "beginTransfer": "Dest Hinartinê bike",
        "tryAgain": "Dîsa biceribîne",
        "visitDiscord": "Here Discord",
        "dragDrop": "Bixişikîn û Berde",
        "importExtentions": ".kdbx or .stronghold dosya",
        "chooseFile": "Dosyayekê jêbigir",
        "dropHere": "Dosya xwe berdim livir",
        "syncAll": "Hemîyê bike wekhev",
        "import": "Import",
        "importing": "Importing",
        "export": "Barkirina Derve",
        "exporting": "Exporting",
        "exportNewStronghold": "Stronghold'ek nû barbikê derve",
        "enableDeepLinks": "Enable deep links",
        "enableDeveloperMode": "Moda pêkirinê çalak bike",
        "enableSystemNotifications": "Danezanên sîstemî bigre",
        "exportTransactionHistory": "Export transaction history",
        "localProofOfWork": "Birhana kar ya heremî",
        "unlock": "Kilîlê Veke",
        "updateFirefly": "Firefly nûjen bike",
        "restartNow": "Aniha ji nûdestpêbike",
        "refresh": "Refresh",
        "saveBackup": "Cîhgira Stronghold'ê tomar bike",
        "customizeAcount": "Taybetkirina cuzdankê",
        "hideAccount": "Cuzdankê veşêre",
        "showAccount": "Veşartina cuzdankê rake",
        "deleteAccount": "Delete wallet",
        "max": "Herî zêde",
        "addNode": "Girêkê zêde bike",
        "addingNode": "Adding node",
        "addOfficialNodes": "Add official nodes",
        "updateNode": "Girêk nûjen",
        "removeNode": "Girê jêbibe",
        "hide": "Veşartin\n",
        "hideOthers": "Veşartinên Din\n",
        "showAll": "Hemî nîşan bide\n",
        "useMax": "Use Max",
        "quit": "Derketin",
        "edit": "Serastkirin",
        "undo": "Vegerîne",
        "redo": "Dûbare",
        "cut": "Birrîn",
        "copy": "kopî",
        "copyAllInformation": "Copy all information",
        "paste": "tevlêkirin",
        "selectAll": "Hemîyê Hilbjiêre ",
        "addAccount": "Cuzdankî zêde",
        "checkForUpdates": "Ji bo Nûvekirinan Kontrol bikin",
        "reportAnIssue": "Pirsgirêkekê ragihînin\n",
        "restore": "Restore",
        "clear": "Paqij bike",
        "hideDetails": "Derbarê dade",
        "yes": "Erê",
        "no": "Na",
        "skip": "Hilavêje",
        "reset": "Bîne serî",
        "downloadRecoveryKit": "Kîta rizgarkirinê tomar bike",
        "skipBackup": "Skip wallet backup",
        "finishSetup": "Sazîyê biqedîn",
        "readDocumentation": "Belgenamê bixwîne",
        "visitFaq": "Here PPP",
        "viewDownloads": "View downloads",
        "viewStatus": "Rewşê bibîn",
        "viewBalanceBreakdown": "View balance breakdown",
        "showHiddenAccounts": "Cuzdankê veşartî nîşan bidin",
        "confirm": "Tomarkirin",
        "hideNetworkStatistics": "Hide network statistics",
        "findWallets": "Find wallets",
        "useBalanceFinder": "Use balance finder",
        "search": "Search",
        "searching": "Searching",
        "searchAgain": "Dîsa lê bigere",
        "closeFirefly": "Firefly bigire",
        "generateAddress": "Generate address",
        "migrateAgain": "Migrate another index",
        "visitWebsite": "Visit website",
        "howItWorks": "How it works",
        "learnAboutStaking": "Learn about staking",
        "stake": "Stake",
        "unstake": "Unstake",
        "stakeFunds": "Stake funds",
        "manageStake": "Manage stake",
        "merge": "Merge",
        "mergeFunds": "Merge funds",
        "done": "Done",
        "okIUnderstand": "OK, I understand",
        "readMore": "Read more",
        "searchForRewards": "Search for rewards",
        "claimRewards": "Claim rewards",
        "rerunClaimProcess": "Rerun claim process",
        "addPublicNote": "Add public note",
        "backup": "Backup",
        "mint": "Mint",
        "mintNativeToken": "Mint native token",
        "mintNft": "Mint NFT",
        "verifyToken": "Verify token",
        "unverifyToken": "Unverify token",
        "hideToken": "Hide token",
        "unhideToken": "Unhide token",
        "burn": "Burn",
        "burnToken": "Burn token",
        "faucetRequest": "Get {token} tokens",
        "refreshTokenMetadata": "Refresh token metadata",
        "test": "Test",
        "testDeepLink": "Test deep link",
        "initialize": "Initialize",
        "initializing": "Initializing",
        "delete": "Delete",
        "remove": "Remove",
        "addReference": "Add reference",
        "depositNft": "Deposit NFTs",
        "vote": "Vote",
        "addProposal": "Add proposal",
        "removeProposal": "Remove proposal",
        "changeNode": "Change node",
        "stopVoting": "Stop voting",
        "revote": "Revote",
        "skipAndKeep": "Skip and keep old password",
        "addChain": "Add chain"
    },
    "general": {
        "recipient": "Recipient",
        "password": "Şîfre",
        "confirmPassword": "Tesdîqkirin\nŞîfre",
        "currentPassword": "Şîfreya heyî",
        "newPassword": "Şîfreya nû",
        "confirmNewPassword": "Tesdîqkirin Şîfreya nû",
        "yourSeed": "Seed'a We",
        "recoveryPhrase": "Fraza Vejandinê",
        "recentActivity": "Çalakiya Dawîn",
        "sent": "şandin",
        "sending": "Tê şandin",
        "received": "Wergirtin",
        "receiving": "Tê standin",
        "newVotingPower": "New voting power",
        "votingPower": "Voting power",
        "increased": "Voting power increased",
        "increasing": "Increasing voting power",
        "decreased": "Voting power decreased",
        "decreasing": "Decreasing voting power",
        "voted": "Voted",
        "voting": "Voting",
        "changedVote": "Changed vote",
        "changingVote": "Changing vote",
        "revoted": "Revoted",
        "revoting": "Revoting",
        "unvoted": "Unvoted",
        "unvoting": "Unvoting",
        "sentNft": "NFT sent",
        "sendingNft": "Sending NFT",
        "receivedNft": "NFT received",
        "receivingNft": "Receiving NFT",
        "transfer": "Transfer",
        "transferring": "Transferring",
        "transferNft": "Transfer NFT",
        "transferringNft": "Transferring NFT",
        "mintedNft": "Minted NFT",
        "mintingNft": "Minting NFT",
        "shimmerClaimed": "Claimed",
        "shimmerClaiming": "Claiming",
        "shimmerGenesis": "Shimmer Genesis",
        "minted": "Minted",
        "minting": "Minting",
        "burned": "Burned",
        "burning": "Burning",
        "consolidated": "Outputs consolidated",
        "consolidating": "Consolidating outputs",
        "aliasCreated": "Alias created",
        "creatingAlias": "Creating Alias",
        "sendPayment": "Dravê bişînin",
        "moveFunds": "Transfera dahîl",
        "sendTo": "Send To",
        "sendAssets": "Send assets",
        "sendAssetToAddress": "Send asset to an address",
        "sendToAddress": "Navnîşana xwe hinêre",
        "sendToken": "Send token",
        "sendNft": "Send NFT",
        "sendNftToAddress": "Send NFT to an address",
        "scanQrOrPaste": "Qodek QR-ê Scan bikin an navnîşanekê pêve bide",
        "moveFundsBetweenAccounts": "Navbera Cuzdankê xwe diraw hinêre",
        "manageAccount": "Cuzdank birêve bibin",
        "customizeAcount": "Taybetkirina cuzdankê",
        "account": "Tûrik",
        "sendingToAddress": "Dihênêrê navnîşanê",
        "amount": "Hijmar",
        "addAddress": "Navnîşanê zêde bike",
        "reference": "Referans",
        "from": "Şander",
        "to": "Kî",
        "and": "and",
        "receiveFunds": "Receive funds",
        "address": "Address",
        "myAddress": "My address",
        "myNetworkAddress": "My {networkName} address",
        "shareAddress": "Navnîşanekê parve bike",
        "yourAddress": "Navnîşana we",
        "newRemainder": "New Remainder",
        "remainder": "Remainder",
        "generateNewAddress": "Navnîşanek nû çêke",
        "copyToClipboard": "Copy to clipboard",
        "copyAddress": "Kopîkirina Navnîşanê",
        "viewOnExplorer": "View on Explorer",
        "import": "Barke hundir",
        "stronghold": "Stronghold",
        "language": "Ziman",
        "appearance": "Dîtin",
        "lightTheme": "Light",
        "darkTheme": "Dark",
        "systemTheme": "System",
        "balance": "Mayîn",
        "balanceWithValue": "Balance: {balance}",
        "balanceWithNetwork": "{network} Balance",
        "all": "All",
        "incoming": "Yên hatî",
        "outgoing": "Yên çûyî",
        "totalIn": "Têketina giştî",
        "totalOut": "Derçûna giştî",
        "accounts": "Cuzdank",
        "myAccounts": "Cuzdank",
        "profiles": "Profîl",
        "dev": "Pêşvebir",
        "createAccount": "Cuzdanek nû çêke",
        "addAWallet": "Add a wallet",
        "accountName": "Navê Cuzdankê",
        "latestTransactions": "Transferên Dawî",
        "transactions": "Lîsteya Transferan",
        "activity": "Activity",
        "security": "Ewlehî",
        "accountAddress": "Navnîşana Cuzdankê",
        "network": "Network",
        "destinationNetwork": "Destination network",
        "nodes": "Girê",
        "wallet": "Cuzdank",
        "help": "Alîkarî",
        "you": "Tu",
        "messageId": "Nasnameya Peyamê",
        "inputAddress": "Navnîşanê Hinêre",
        "receiveAddress": "Navnîşana Standinê",
        "newAddress": "New Address",
        "date": "Rojmêr",
        "status": "Status",
        "confirmed": "Hat Pejirandin",
        "pending": "Bendê ye",
        "noAccounts": "Cuzdankê we tune, ji kerema xwe yêk çêbikin.",
        "loadingAccounts": "Bardibe, ji kerema xwe re rawestin...",
        "addProfile": "Profîlê zêde bikin\n",
        "noRecentHistory": "Bûyer nîne",
        "noFilteredActivity": "No matching activities",
        "noAssets": "No assets",
        "noFilteredAsset": "No matching assets",
        "thisMonth": "This month",
        "search": "Search",
        "firstSync": "Dîroka hevdemkirinê, dibe ku ev demek bikişîne...",
        "transferSyncing": "Cuzdanka sekronîze bike",
        "transferSelectingInputs": "Hilbijartina têketinê",
        "transferRemainderAddress": "Generating remainder address",
        "transferPreparedTransaction": "Preparing transaction",
        "transferSigning": "Îmzekirina danûstendinê",
        "transferPow": "PoW çêdibe",
        "transferBroadcasting": "Kiryar tê weşandin",
        "transferComplete": "Transfer gehişt",
        "generatingReceiveAddress": "Generating receive address",
        "broadcasting": "Broadcasting",
        "confirming": "Confirming",
        "creatingAccount": "Profîlek nû çêdibe, ji kerema xwe rawestin...",
        "updatingAccount": "Cuzdank tê nûvekirin, ji kerema xwe bisekinin...",
        "accountSyncing": "Cuzdank sekronîze dibe",
        "accountSyncComplete": "Senkronîzekirina Cuzdank diqede",
        "passwordUpdating": "Şifre nû dibe...",
        "passwordSuccess": "Pêborîn bi serfirazî hat nûjenkirin",
        "passwordFailed": "Pêborîn bi serfirazî nehat nûjenkirin",
        "syncing": "Syncing",
        "syncingAccounts": "Cuzdanka sekronîze bike...",
        "exportingStronghold": "Stronghold barke...",
        "exportingStrongholdSuccess": "Stronghold bi serfirazî hat şandin",
        "exportingStrongholdFailed": "Barkirina Stronghold ya derve têk çû",
        "pinCodeUpdating": "Koda PIN'ê tê nûjenkirin...",
        "pinCodeSuccess": "Pêborîn bi serfirazî hat nûjenkirin",
        "pinCodeFailed": "Pêborîn bi serfirazî nehat nûjenkirin",
        "passwordStrength": "Hêza pêborînê",
        "passwordStrength0": "Nebaş",
        "passwordStrength1": "Qels",
        "passwordStrength2": "Lawaz",
        "passwordStrength3": "Nacîn",
        "passwordStrength4": "Bihêze",
        "creatingProfile": "Profîlek nû çêdibe, ji kerema xwe rawestin...",
        "fundMigration": "Barkirina mayînan",
        "accountRemoved": "Ev Cuzdank veşartî ye. Wê veke ku veguheztinan pêk bîne.",
        "fromAddress": "from {account}",
        "toAddress": "to {account}",
        "stakedFor": "Staked for {account}",
        "unstakedFor": "Unstaked for {account}",
        "votedFor": "Voted for {account}",
        "unvotedFor": "Unvoted for {account}",
        "stakingTransaction": "Staking Transaction",
        "unstakingTransaction": "Unstaking Transaction",
        "legacyNetwork": "Tora Kevn",
        "capsLock": "Caps Lock is on",
        "version": "Version {version}",
        "yourWallets": "Your Wallets",
        "unknown": "Unknown",
        "unknownAddress": "Unknown address",
        "none": "None",
        "staked": "Staked",
        "unstaked": "Unstaked",
        "staking": "Staking",
        "unstaking": "Unstaking",
        "notStaked": "Not staked",
        "stakedFunds": "Staked funds",
        "unstakedFunds": "Unstaked funds",
        "accountColor": "Wallet color",
        "transactionTime": "Transaction time",
        "surplus": "Surplus",
        "storageDeposit": "Storage deposit",
        "giftedStorageDeposit": "Gifted storage deposit",
        "storageDepositPerNft": "Storage deposit per NFT",
        "totalStorageDeposit": "Total storage deposit",
        "expirationTime": "Expiration time",
        "timelockDate": "Timelock",
        "claimedTime": "Claimed at",
        "nftAddress": "NFT Address",
        "nftId": "NFT ID",
        "nftMetadata": "NFT Metadata",
        "aliasId": "Alias ID",
        "governorAddress": "Governor Address",
        "stateControllerAddress": "State Controller Address",
        "copiedToClipboard": "Copied to clipboard",
        "total": "Total: {balance}",
        "availableBalanceWithValue": "Available balance: {balance}",
        "availableBalance": "Available balance",
        "availableBalanceTooltip": "An asset's total balance minus any funds that are required to cover the storage deposit (i.e. funds that are locked in pending transactions, reserved for Native Tokens, or reserved for NFTs).",
        "amountClaimed": "{amount} claimed",
        "metadata": "Metadata",
        "amountConsolidatedInputs": "Consolidated outputs",
        "name": "Name",
        "tag": "Tag",
        "nodeList": "Node list",
        "claimedIn": "Claimed in",
        "claimingIn": "Claiming in",
        "assets": "Assets",
        "nativeTokens": "Native tokens",
        "mintNativeTokenDescription": "Mint native token following IRC30 standard",
        "mintNftDescription": "Mint NFT following IRC27 standard",
        "faucetRequestDescription": "Request tokens from the {network} faucet",
        "refreshTokenMetadataDescription": "Reset and refresh all token metadata",
        "refreshTokenMetadataHint": "This will reset all your tokens' metadata including the verification status and unhide any hidden assets.",
        "giftStorageDeposit": "Gift storage deposit",
        "excluded": "Excluded",
        "developerTools": "Developer tools",
        "testDeepLinkDescription": "Simulate a deep link request sent to firefly",
        "url": "URL",
        "hash": "Hash",
        "creating": "Creating",
        "updating": "Updating",
        "enterAddress": "Enter address",
        "transaction": "Transaction",
        "alias": "Alias",
        "foundry": "Foundry",
        "token": "Token",
        "nft": "NFT",
        "type": "Type",
        "immutableIssuer": "Immutable Issuer",
        "smartContract": "Smart Contract",
        "targetContract": "Target contract",
        "contractFunction": "Contract function",
        "gasBudget": "Gas budget",
        "standard": "Standard",
        "uri": "URI",
        "issuer": "Issuer",
        "issuerAddress": "Issuer Address",
        "issuerName": "Issuer Name",
        "quantity": "Quantity",
        "collection": "Collection",
        "collectionId": "Collection ID",
        "collectionName": "Collection Name",
        "royalties": "Royalties",
        "description": "Description",
        "attributes": "Attributes",
        "details": "Details",
        "availableAmount": "{amount} available",
        "properties": "Properties",
        "statistics": "Statistics",
        "username": "Username",
        "jwt": "JSON web token",
        "internalTransaction": "Internal transaction",
        "coinType": "Coin type",
        "custom": "Custom",
        "evmAddress": "EVM address",
        "chain": "Chain",
        "importErc20Token": "Import ERC20 token",
        "importErc20TokenDescription": "Import an ERC20 token from an EVM chain"
    },
    "filters": {
        "title": "Filters",
        "showHidden": {
            "label": "Show hidden",
            "yes": "Yes",
            "no": "No"
        },
        "showRejected": {
            "label": "Show rejected",
            "yes": "Yes",
            "no": "No"
        },
        "showValueless": {
            "label": "Show valueless",
            "yes": "Yes",
            "no": "No"
        },
        "ascDesc": {
            "Asc": "Ascending",
            "Desc": "Descending"
        },
        "assetOrder": {
            "label": "Order",
            "Name": "Name",
            "Amount": "Amount"
        },
        "internalExternal": {
            "label": "Internal / External",
            "internal": "Internal",
            "external": "External"
        },
        "verificationStatus": {
            "label": "Verification status",
            "new": "New",
            "skipped": "Skipped verification",
            "selfVerified": "Self-verified",
            "official": "Official"
        },
        "asset": {
            "label": "Assets"
        },
        "amount": {
            "label": "Amount",
            "equal": "is equal to",
            "range": "is between",
            "greater": "is greater than",
            "less": "is less than"
        },
        "date": {
            "label": "Date",
            "equals": "is equal to",
            "last": "in the last",
            "range": "is between",
            "after": "is after",
            "afterOrEquals": "is on or after",
            "before": "is before",
            "Days": "days",
            "Months": "months",
            "Years": "years"
        },
        "status": {
            "label": "Status",
            "confirmed": "confirmed",
            "pending": "pending",
            "claimed": "claimed",
            "unclaimed": "unclaimed"
        },
        "type": {
            "label": "Type",
            "basic": "Basic",
            "nft": "NFT",
            "alias": "Alias",
            "foundry": "Foundry",
            "governance": "Governance",
            "consolidation": "Consolidation"
        },
        "direction": {
            "label": "Direction",
            "incoming": "Incoming",
            "outgoing": "Outgoing",
            "selfTransaction": "Self transaction"
        },
        "proposalType": {
            "label": "Type",
            "official": "Official",
            "custom": "Custom"
        },
        "phase": {
            "label": "Phase"
        },
        "participated": {
            "label": "Participated",
            "yes": "Yes",
            "no": "No"
        },
        "proposalOrder": {
            "label": "Order",
            "name": "Name",
            "phase": "Phase"
        },
        "network": {
            "label": "Network"
        }
    },
    "dates": {
        "today": "Evro",
        "yesterday": "Duh",
        "daysAgo": "{time, plural, one {# roj} other {# roj}} berî",
        "weeksAgo": "{time, plural, one {# hefte} other {# hefte}} berîya",
        "monthsAgo": "{time, plural, one {# meh} other {# meh}} berî",
        "yearsAgo": "{time, plural, one {# sal} other {# sal}} berî"
    },
    "times": {
        "second": "{time, plural, one {# second} other {# seconds}}",
        "minute": "{time, plural, one {# minute} other {# minutes}}",
        "hour": "{time, plural, one {# hour} other {# hours}}",
        "day": "{time, plural, one {# day} other {# days}}",
        "week": "{time, plural, one {# week} other {# weeks}}",
        "month": "{time, plural, one {# month} other {# months}}",
        "year": "{time, plural, one {# year} other {# years}}"
    },
    "notifications": {
        "valueTx": "Distînê {{value}} di {{account}}",
        "confirmed": "Ya {{value}} ji {{account}} hesabê çûyî hat pêjirandin",
        "confirmedInternal": "{{value}} ji {{senderAccount}} çû {{receiverAccount}} hat pejirandin",
        "confirmedInternalNoAccounts": "{{value}} veguheztina navxweyî pejirandiye",
        "failed": "Ya {{value}} ji {{account}} hesabê çûyî hat pêjirandin",
        "downloadingUpdate": "Nûjenkirin tê daxistin",
        "updateReady": "Nûjenkirin amadeye",
        "updateError": "Şanda vexwinê de pirsgirêkêk rûda. Ji kerema xwe dîsa biceribîn",
        "restartInstall": "Destpêkirin a sazkirinê",
        "calcMinutesRemaining": "Xulekên mayîn tên hesabkirin...",
        "minutesRemaining": "{minutes, plural, one {# minute remaining} other {# minutes remaining}}",
        "copiedToClipboard": "Li rûnûsgehê hate kopîkirin",
        "accountsSynchronized": "Senkronîzekirina Cuzdankê serkeft",
        "fundsAvailableSoon": "Your funds will become available shortly",
        "exportTransactionHistory": {
            "success": "Transaction history for {accountAlias} was successfully saved to {filePath}",
            "error": "Unable to export transaction history for {accountAlias}"
        },
        "deepLinkingRequest": {
            "receivedWhileLoggedOut": "Please login to initiate the deep link",
            "notEnabled": "Deep links are not enabled",
            "invalidFormat": "The deep link you followed is invalid",
            "invalidAmount": "The amount in deep link is not an integer number {amount}",
            "invalidSurplus": "The surplus in deep link is not a number {surplus}",
            "surplusNotSupported": "The surplus is only supported for native tokens",
            "governance": {
                "unrecognizedOperation": "Unrecognized Governance operation: {operation}"
            },
            "wallet": {
                "send": {
                    "success": "Payment details added from deep link"
                },
                "unrecognizedOperation": "Unrecognized wallet operation: {operation}"
            }
        },
        "syncing": "Please wait until synchronization is finished to change wallets.",
        "transferring": "Please wait until all transactions are completed to change wallets.",
        "participating": "Please wait until all staking/voting transactions are completed to change wallets.",
        "claimed": {
            "success": "Transaction claimed",
            "error": "Claiming transaction failed"
        },
        "hideActivity": {
            "success": "Activity was hidden",
            "error": "Failed to hide activity"
        },
        "faucetRequest": {
            "success": "Request for tokens sent to the faucet"
        },
        "mintNativeToken": {
            "success": "Native token minting transaction sent"
        },
        "burnNativeToken": {
            "success": "Native token burning transaction sent"
        },
        "mintNft": {
            "success": "NFT minting transaction sent"
        },
        "burnNft": {
            "success": "NFT burning transaction sent"
        },
        "refreshTokenMetadata": {
            "success": "All token metadata has been reset and refreshed"
        },
        "restoreFromStrongholdBackup": {
            "wrongProtocol": "Protocol doesn't match coin type found in Stronghold backup",
            "wrongProtocolForClaiming": "You must use an IOTA-based Stronghold backup to claim Shimmer rewards"
        },
        "findShimmerRewards": {
            "success": "Successfully found Shimmer rewards",
            "error": "An error occurred while searching for rewards"
        },
        "claimShimmerRewards": {
            "success": "Shimmer rewards claimed for {accountAlias}",
            "error": "An error occurred while claiming. Try again."
        },
        "vote": {
            "success": "Votes successfully cast"
        },
        "stopVoting": {
            "success": "Voting successfully stopped"
        }
    },
    "error": {
        "profile": {
            "length": "Your profile name can't be longer than {length, plural, one {# character} other {# characters}}.",
            "duplicate": "Li ser vî navî jixwe bikarhênerek heye.",
            "delete": {
                "nonEmptyAccounts": "You must transfer all balances before you can delete your profile."
            },
            "type": "Unable to determine the profile type",
            "setupType": "Unable to determine the profile setup type"
        },
        "password": {
            "doNotMatch": "Pêborîn li hev nayên.",
            "tooWeak": "Pêborîna te a nû lawaze.",
            "row": "Zenkirina tîpên rasterast hêsane.",
            "pattern": "Zenkirina qalikên kîbordê yên kurt hêsane.",
            "names": "Zenkirina nav û paşnavên gelemperî hêsane.",
            "repeats": "Zenkirina wekî dûbareyên 'aaa' hêsane.",
            "repeats2": "Zenkirina wekî dûbareyên 'abcbcabc' hêsane.",
            "sequence": "Zenkirina hevokên tîpa hêsan e.",
            "years": "Zenkirina rojmêra nû hêsantire.",
            "dates": "Zenkirina rojmêra hêsane.",
            "common": "Ev pêborînek gelemperîye.",
            "similar": "Ev dişibe pêborînek gelemperî.",
            "word": "Zenkirina peyvekê hêsane.",
            "incorrect": "Pêborîna we ne raste.",
            "length": "Your password can't be longer than {length, plural, one {# character} other {# characters}}.",
            "sameAsOld": "Your new password must be different from your old password."
        },
        "pincode": {
            "length": "Your PIN must be {length, plural, one {# digit} other {# digits}} long.",
            "match": "PIN ji hev nagirin.",
            "incorrect": "Pêborîna heman çewte.",
            "invalid": "Invalid PIN code."
        },
        "address": {
            "wrongAddressType": "Wrong address type"
        },
        "account": {
            "addressNotFound": "The address cannot be found in your account.",
            "length": "Your wallet name can't be longer than {length, plural, one {# character} other {# characters}}.",
            "emptyName": "A profile name must contain at least 1 character.",
            "notEmpty": "Berîya hûn vê Cuzdankê binbibin, pêdiviye hûn transfera mayînên xwe bikin.",
            "duplicate": "Li ser vî navî jixwe Cuzdank heye.",
            "tilde": "Nabe navê profîlê bi qerekteran '~' destpêbike.",
            "control": "Nabe navê profîlê qerekterek yê kontrolê destpêbike.",
            "startDot": "Nabe navê profîlê bi qerekteran '.' destpêbike.",
            "chars": "Nabe navê profîlê ji qerekterek <>:\"/\\|?* destpêbike",
            "index": "Your account index must be a number between 0 and 2,147,483,647.",
            "page": "Your account page must be a number between 0 and 2,147,483,647.",
            "syncing": "There was an error syncing your wallets.",
            "cannotRemove": "Unable to remove wallet.",
            "withBalance": "You must transfer all balances before you can delete this wallet.",
            "notLast": "You can only delete your last wallet.",
            "notFound": "Unable to find account",
            "cannotGetBoundAccount": "Unable to get bound account"
        },
        "send": {
            "addressLength": "Addresses should be {length, plural, one {# character} other {# characters}} long.",
            "amountTooHigh": "Ev ji mayînên we yên heman pirtire.",
            "amountNoFloat": "Cannot use decimal places with the smallest unit selected",
            "amountInvalidFormat": "Jimar ne erênî xûya dike.",
            "amountSmallerThanSubunit": "The amount must be greater than the smallest subunit.",
            "tagTooLong": "The tag cannot be longer than 64 bytes.",
            "metadataTooLong": "The metadata cannot be longer than 8192 bytes.",
            "amountZero": "Divê hijmara giştî ji 0 ê mezintir be.",
            "wrongAddressPrefix": "Navnîşan bi pêveya pêşî {prefix} re destpêbike.",
            "wrongAddressFormat": "Navnîşan şêweyek rast nehatiye çêkirin.",
            "invalidAddress": "Navnîşan netêle.",
            "invalidAssetId": "The asset id is not valid.",
            "unknownAsset": "The asset is not known to this account.",
            "insufficientFunds": "Mayîna Cuzdankê têrê nake.",
            "insufficientFundsStorageDeposit": "Insufficient funds to cover the storage deposit.",
            "ongoingTransaction": "If you have ongoing transactions, please wait for their confirmation.",
            "cannotClaimTwice": "Output has been already claimed",
            "noToAccount": "Jibo hinêrtina mayînê te Cuzdank jê ne girt.",
            "sendingDust": "Hûn nikarin ji 1 Mi kêmtir hinêrin.",
            "leavingDust": "Hûn nikarin di navnîşana xwe de ji 1 Mi kêmtir bêhêlîn.",
            "cancelled": "The transaction was cancelled.",
            "transaction": "There was an error sending your transaction. Please try again.",
            "invalidExpirationDateTime": "The chosen expiration date/time is invalid.",
            "noInputs": "No inputs found.",
            "notEnoughBalance": "Not enough balance.",
            "missingTransactionId": "The transaction ID is missing",
            "missingTransactionProgressEventPayload": "The transaction progress event payload is missing",
            "recipientRequired": "Recipient is required",
            "nftRequired": "NFT is required",
            "nftNotInHex": "NFT address has to be in HEX format",
            "nftNotInPossession": "NFT not in possession",
            "reservedTagKeyword": "Unable to use reserved tag keyword"
        },
        "layer2": {
            "layer1Recipient": "A layer 2 transaction cannot be sent to a layer 1 account."
        },
        "node": {
            "invalid": "Ji kerema xwe URL'yeke derbasdar bikevê.",
            "dns": "Unable to find DNS resolution for node",
            "timedOut": "The connection timed out.",
            "refused": "The connection was refused.",
            "handshake": "Could not complete handshake with node.",
            "invalidCertificate": "Could not connect with invalid certificate.",
            "https": "HTTPS is required; insecure connections over HTTP are not supported at this time.",
            "duplicate": "Jixwe ev pêşkeşkar hatîye zêdekirin.",
            "noSyncedNode": "No synced node is available.",
            "timeNotSynced": "Device time is incorrect, unable to sync node.",
            "answer": "Failed to get an answer from all nodes.",
            "forbidden": "This node connection is forbidden.",
            "pluginNotAvailable": "The \"{nodePlugin}\" plugin is not available on the current node.",
            "unabledToConnect": "Unable to connect to the node",
            "differentNetwork": "The node is located on a different network",
            "duplicateNodes": "Unable to add duplicate node",
            "noCoinType": "No coin type specified"
        },
        "network": {
            "mismatch": "The network ID for this node is \"{networkId}\", which does not match the current network.",
            "notReachable": "The network ID for this node could not be retrieved, unable to add node.",
            "badNodes": "Unable to connect to the network with current node configuration.",
            "nonEmptyAccount": "You must transfer all balances before switching networks."
        },
        "global": {
            "generic": "Hinek tişt şaş çûn."
        },
        "backup": {
            "invalid": "Pelê hilanînê nehat nas kirin.",
            "destination": "Armanca hilanînê ne derbasdar bû.",
            "mnemonic": "Sedem ne derbasdar e.",
            "migrationRequired": "Stronghold migration is required.",
            "seedTooShort": "The seed should be 81 characters long, it {length, plural, one {is #} other {is #}}",
            "seedCharacters": "Divê tov tenê tîpên A-Z an 9 hebin",
            "phraseWordCount": "There should be 24 words in your recovery phrase, currently there {length, plural, one {is #} other {are #}}.",
            "phraseUnrecognizedWord": "Di hevoka başbûna we de peyva \"{word}\" a ku nayê nas kirin",
            "phraseCaseWord": "Divê pêyv \"{word}\" bi tîpa piçûk be",
            "unableToCopyFile": "Unable to copy Stronghold backup file",
            "unableToRestoreForProfileManager": "Unable to restore Stronghold backup for profile manager"
        },
        "ledger": {
            "appNotOpen": "You must open the IOTA app on your Ledger device.",
            "generic": "There was an error connecting to your Ledger device.",
            "legacyConnected": "The wrong app is open on your Ledger device.",
            "locked": "Please unlock your Ledger device by entering the PIN.",
            "mnemonicMismatch": "You have connected the wrong Ledger device or the mnemonic has changed.",
            "notConnected": "No Ledger device detected.",
            "notFound": "Ledger device not found.",
            "otherConnected": "The wrong app is open on your Ledger device.",
            "generateAddress": "There was an error generating an address.",
            "timeout": "Your Ledger device timed out.",
            "disconnected": "Your Ledger device was disconnected.",
            "noStronghold": "Unable to use Stronghold with Ledger profile."
        },
        "popup": {
            "preventClose": "This popup is unable to be closed."
        },
        "migration": {
            "missingBundle": "An error occurred while trying to find the transaction bundle."
        },
        "crypto": {
            "cannotDecodeBech32": "Unable to decode string as Bech32 address."
        },
        "participation": {
            "cannotUseAccount": "Unable to use the specified account.",
            "cannotFindStakingEvent": "Unable to find staking event.",
            "cannotVisitAirdropWebsite": "Unable to open the {airdrop} website.",
            "invalidStakingEventId": "Invalid staking event ID."
        },
        "invalidDate": "INVALID DATE",
        "invalidTime": "INVALID TIME",
        "shimmerClaiming": {
            "missingProfileManager": "Unable to find Shimmer claiming profile manager",
            "cannotInitialiseAccount": "Unable to initialize Shimmer claiming account",
            "missingAccount": "Unable to find Shimmer claiming account"
        },
        "walletApiEvent": {
            "invalidAccountIndex": "Invalid account index for {eventName} event",
            "invalidPayload": "Invalid payload for {eventName} event"
        },
        "aliasMinting": {
            "aliasRequired": "Alias is required",
            "aliasNotInPossession": "Alias not in possession"
        },
        "noOutputsToConsolidate": "Not enough outputs to consolidate",
        "eventId": {
            "doesNotStartWith0x": "Event ID should start with '0x'",
            "insufficientLength": "Event ID should be 66 characters long",
            "alreadyRegistered": "Event ID already registered"
        },
        "nft": {
            "unsupportedUrl": {
                "short": "Url not supported",
                "long": "Url schema not supported"
            },
            "unsupportedFileType": {
                "short": "Unsupported media type",
                "long": "The media type is not currently supported"
            },
            "notMatchingFileTypes": {
                "short": "Loading blocked",
                "long": "NFT file type does not match the expected media type"
            },
            "notReachable": {
                "short": "Not reachable",
                "long": "NFT file is not reachable"
            },
            "tooLargeFile": {
                "short": "File is too large",
                "long": "Loading NFT blocked because the file is too large"
            },
            "downloadTooLong": {
                "short": "File took too long to download",
                "long": "Loading NFT blocked because the file took too long to download"
            },
            "corsError": {
                "short": "Loading blocked",
                "long": "Loading NFT blocked by CORS policy"
            },
            "unsafeToLoad": {
                "short": "Unsafe to load",
                "long": "An error occurred while checking if the NFT was safe to load"
            },
            "loadingError": {
                "short": "Unable to load",
                "long": "An error occurred while loading the NFT"
            }
        },
        "governance": {
            "unableToAddProposal": {
                "short": "Unable to add proposal",
                "long": "Unable to find proposal {proposalId} on the specified node"
            }
        },
        "erc20Token": {
            "invalidAddressFormat": "Must be hexadecimal format",
            "invalidAddressLength": "Length is invalid"
        }
    },
    "warning": {
        "transaction": {
            "invalidExpirationDateTime": "The chosen expiration date is invalid."
        },
        "node": {
            "http": "Using nodes over HTTP leaves traffic unencrypted and could pose a security risk."
        },
        "participation": {
            "noFunds": "You do not have any IOTA."
        }
    },
    "tooltips": {
        "risk": {
            "title": "Asta metirsî yê:{risk}",
            "veryHigh": "Pir bilind",
            "high": "Bilind",
            "medium": "Navîn",
            "low": "Lawaz",
            "veryLow": "Gelekî Nizm"
        },
        "partiallyStakedFunds": {
            "title": "New unstaked funds: {amount}",
            "titleNoFunds": "New unstaked funds",
            "preBody": "You have received tokens that are not staked.",
            "body": "You need to manually stake these new funds to receive airdrop rewards for them."
        },
        "stakingMinRewards": {
            "title": "Below minimum reward value",
            "titleMinBalance": "{amount} minimum balance required",
            "bodyMinBalance": "This wallet does not have enough IOTA tokens to reach the minimum airdrop reward and cannot therefore be staked.",
            "continue": "Please continue staking for another {duration}.",
            "bodyBelowMin": "This wallet has not reached the minimum reward value for {airdrop} ({airdropRewardMin}).",
            "bodyWillReachMin": "You must stake for another {duration} to reach the minimum.",
            "bodyWillNotReachMin": "You will not reach the minimum reward value during the remaining staking period unless you add more IOTA.",
            "bodyDidNotReachMin": "You did not stake enough IOTA to reach the minimum reward value for {airdrop} ({airdropRewardMin}).",
            "bodyMinBalanceAirdrop": "This wallet does not have enough IOTA tokens to reach the minimum airdrop reward for {airdrop}."
        },
        "optionalInput": "This optional data will be public on the explorer and viewable by everyone.",
        "transactionDetails": {
            "minting": {
                "storageDeposit": "A refundable token deposit needed to store your transaction on the Tangle.",
                "giftedStorageDeposit": "The storage deposit for this transaction was gifted to you. You do not need to refund the deposit.",
                "expirationTime": "Claim these funds before the expiration time or they will be returned to the sender.",
                "timelockDate": "The sender set a timelock on these funds. You will be able to spend them once the timelock expires.",
                "metadata": "An optional data field for storing data persistently on the Tangle.",
                "tag": "A short optional data field. Tagging groups of transactions can make them easier to search for."
            },
            "incoming": {
                "storageDeposit": "A refundable token deposit needed to store your transaction on the Tangle.",
                "giftedStorageDeposit": "The storage deposit for this transaction was gifted to you. You do not need to refund the deposit.",
                "expirationTime": "Claim these funds before the expiration time or they will be returned to the sender.",
                "timelockDate": "The sender set a timelock on these funds. You will be able to spend them once the timelock expires.",
                "metadata": "An optional data field for storing data persistently on the Tangle.",
                "tag": "A short optional data field. Tagging groups of transactions can make them easier to search for.",
                "gasBudget": "Gas budget is required to conduct a transaction or execute a smart contract function on Shimmer EVM."
            },
            "outgoing": {
                "storageDeposit": "A storage deposit is a refundable deposit needed to store your transaction on the Tangle.",
                "giftedStorageDeposit": "The recipient does not need to refund the deposit.",
                "expirationTime": "If the recipient does not claim in time your tokens will be returned to you.",
                "timelockDate": "You added a timelock to this transaction. The recipient will not be able to spend these funds until the timelock expires.",
                "metadata": "An optional data field for storing data persistently on the Tangle.",
                "tag": "A short optional data field. Tagging groups of transactions can make them easier to search for.",
                "gasBudget": "Gas budget is required to conduct a transaction or execute a smart contract function on Shimmer EVM."
            },
            "nftMetadata": {
                "standard": "The NFT standard e.g. IRC27.",
                "type": "The MimeType of the NFT. e.g. image/png.",
                "collectionId": "UTXO string of the collection NFT that minted this NFT",
                "royalties": "An object containing key-value pairs of addresses that map to payout percentages",
                "issuerName": "The name of the creator",
                "attributes": "An array of traits and values that define attributes of the NFT"
            }
        },
        "mintNativeToken": {
            "decimals": "IRC30 optional parameter: Number of decimals the token uses (divide the token amount by 10^decimals to get its user representation).",
            "description": "IRC30 optional parameter: The human-readable description of the token.",
            "url": "IRC30 optional parameter: URL pointing to more resources about the token like a website or social media page.",
            "logoUrl": "IRC30 optional parameter: URL pointing to an image resource of the token logo."
        },
        "mintNftForm": {
            "collectionId": "Optional parameter: UTXO string of the collection NFT that minted this NFT",
            "collectionName": "Optional parameter: The collection's name",
            "royalties": "Optional parameter: An object containing key-value pairs of addresses that map to payout percentages",
            "issuerName": "Optional parameter: The name of the creator",
            "description": "Optional parameter: A description of the NFT",
            "attributes": "Optional parameter: An array of traits and values that define attributes of the NFT",
            "uri": "To create a URI using custom media, first upload your file to IPFS via a storage service (e.g. https://nft.storage/)",
            "quantity": "Optional parameter: The quantity of copies minted with this metadata."
        },
        "governance": {
            "removeProposalWarning": "You must stop voting for this proposal before removing it.",
            "outdatedNode": {
                "title": "Outdated node URL",
                "body": "The node URL for this proposal is outdated. Please update it to access the latest voting results."
            },
            "resultsNotAvailable": {
                "title": "Results not available",
                "body": "The results are no longer available on this proposal's corresponding node. Please update it to access the results."
            }
        },
        "updateStronghold": {
            "profileBadge": "Your Stronghold is out of date. Log in to update Stronghold."
        }
    },
    "exports": {
        "transactionHistoryCsv": {
            "messageId": "Message ID",
            "internal": "Internal",
            "rawValue": "Raw Value",
            "formattedValue": "Formatted Value",
            "date": "Date",
            "time": "Time"
        }
    },
    "indicators": {
        "developerProfileIndicator": {
            "warningText": "You are currently using a developer profile and are connected to {networkName}"
        },
        "networkIndicator": {
            "warningText": "Network performance degraded. Message confirmation may take a bit longer than usual."
        }
    },
    "permissions": {
        "camera": {
            "request": "We need your permission to use your camera to be able to scan QR codes.",
            "requestInAppSettings": "If you want to grant permission for using your camera to scan QR codes, please enable it in the app settings."
        }
    },
    "tabs": {
        "wallet": "Wallet",
        "collectibles": "Collectibles",
        "governance": "Governance",
        "developer": "Developer",
        "tokens": "Tokens",
        "activity": "Activity"
    },
    "pills": {
        "stake": {
            "Pending": "staking for",
            "Confirmed": "staked for",
            "Conflicting": "failed to stake"
        },
        "external": {
            "incoming": {
                "Pending": "receiving from",
                "Confirmed": "received from",
                "Conflicting": "failed to receive"
            },
            "outgoing": {
                "Pending": "sending to",
                "Confirmed": "sent to",
                "Conflicting": "failed to send"
            }
        },
        "internal": {
            "incoming": {
                "Pending": "transferring from",
                "Confirmed": "transferred from",
                "Conflicting": "failed to transfer"
            },
            "outgoing": {
                "Pending": "transferring to",
                "Confirmed": "transferred to",
                "Conflicting": "failed to transfer"
            },
            "selfTransaction": {
                "Pending": "transferring to",
                "Confirmed": "transferred to",
                "Conflicting": "failed to transfer"
            }
        },
        "mint": {
            "Pending": "minting",
            "Confirmed": "minted",
            "Conflicting": "failed to mint"
        },
        "burn": {
            "Pending": "burning",
            "Confirmed": "burned",
            "Conflicting": "failed to burn"
        },
        "consolidation": {
            "Pending": "Consolidating outputs",
            "Confirmed": "Outputs consolidated",
            "Conflicting": "failed to consolidate outputs"
        },
        "migrate": {
            "Pending": "migrating for",
            "Confirmed": "migrated for",
            "Conflicting": "failed to migrate"
        },
        "asyncStatus": {
            "unclaimed": "unclaimed",
            "claimed": "claimed",
            "expired": "expired"
        },
        "governance": {
            "increaseVotingPower": {
                "Pending": "increasing voting power",
                "Confirmed": "increased voting power",
                "Conflicting": "failed to increased voting power"
            },
            "decreaseVotingPower": {
                "Pending": "decreasing voting power",
                "Confirmed": "decreased voting power",
                "Conflicting": "failed to decreased voting power"
            },
            "startVoting": {
                "Pending": "voting for",
                "Confirmed": "voted for",
                "Conflicting": "failed to vote for"
            },
            "stopVoting": {
                "Pending": "stopping voting for",
                "Confirmed": "stopped voting for",
                "Conflicting": "failed to stopped voting for"
            },
            "changedVote": {
                "Pending": "changing vote for",
                "Confirmed": "changed vote for",
                "Conflicting": "failed to change vote for"
            },
            "revote": {
                "Pending": "revoting",
                "Confirmed": "revote",
                "Conflicting": "failed to revote"
            },
            "proposalStatus": {
                "upcoming": "Announcement",
                "commencing": "Voting open",
                "holding": "Counting",
                "ended": "Closed",
                "nodeOutdated": "Outdated node URL",
                "resultsNotAvailable": "Results not available"
            }
        },
        "alias": {
            "creation": {
                "Pending": "creating alias",
                "Confirmed": "alias created",
                "Failed": "Failed to create alias"
            }
        },
        "networkHealth": {
            "down": "Down",
            "degraded": "Degraded",
            "operational": "Operational",
            "disconnected": "Disconnected"
        },
        "locked": "locked",
        "smartContract": "smart contract"
    },
    "menus": {
        "expirationTimePicker": {
            "none": "No expiration time",
            "1hour": "In 1 hour",
            "1day": "In 1 day",
            "1week": "In 1 week",
            "customDate": {
                "title": "Custom date",
                "subtitle": "Set custom expiry date"
            }
        }
    }
}
