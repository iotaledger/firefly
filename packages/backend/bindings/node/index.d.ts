import { AccountToCreate, AccountIdentifier, ListMessagesFilter, SyncAccountOptions } from '../../api-wrapper/account';
import { Transfer } from '../../api-wrapper/message';
export declare function init(storagePath?: string): void;
export declare function onMessage(cb: (payload: any) => void): void;
export declare const api: {
    createAccount: (account: AccountToCreate) => (__id: number) => Promise<number>;
    removeAccount: (accountId: AccountIdentifier) => (__id: number) => Promise<number>;
    getAccount: (accountId: AccountIdentifier) => (__id: number) => Promise<number>;
    getAccounts: () => (__id: number) => Promise<number>;
    syncAccounts: () => (__id: number) => Promise<number>;
    generateAddress: (accountId: AccountIdentifier) => (__id: number) => Promise<number>;
    listMessages: (accountId: AccountIdentifier, filters?: ListMessagesFilter) => (__id: number) => Promise<number>;
    listAddresses: (accountId: AccountIdentifier, unspent?: boolean) => (__id: number) => Promise<number>;
    availableBalance: (accountId: AccountIdentifier) => (__id: number) => Promise<number>;
    totalBalance: (accountId: AccountIdentifier) => (__id: number) => Promise<number>;
    latestAddress: (accountId: AccountIdentifier) => (__id: number) => Promise<number>;
    syncAccount: (accountId: AccountIdentifier, options?: SyncAccountOptions) => (__id: number) => Promise<number>;
    reattach: (accountId: AccountIdentifier, messageId: string) => (__id: number) => Promise<number>;
    backup: (destinationPath: string) => (__id: number) => Promise<number>;
    restoreBackup: (backupPath: string, password: string) => (__id: number) => Promise<number>;
    setStrongholdPassword: (password: string) => (__id: number) => Promise<number>;
    send: (fromAccountId: AccountIdentifier, transfer: Transfer) => (__id: number) => Promise<number>;
    internalTransfer: (fromAccountId: AccountIdentifier, toAccountId: AccountIdentifier, amount: number) => (__id: number) => Promise<number>;
    onError: () => (__id: number) => Promise<number>;
    onBalanceChange: () => (__id: number) => Promise<number>;
    onNewTransaction: () => (__id: number) => Promise<number>;
    onConfirmationStateChange: () => (__id: number) => Promise<number>;
    onReattachment: () => (__id: number) => Promise<number>;
    onBroadcast: () => (__id: number) => Promise<number>;
};
